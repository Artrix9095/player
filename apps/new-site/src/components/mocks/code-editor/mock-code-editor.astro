---
import clsx from 'clsx';
import CodeSnippet from '../../code-snippet/code-snippet.astro';
import SplitCodePane from '../../split-code-pane.svelte';
import MockWindowBar from '../mock-window-bar.astro';
import {
  buildTreeItems,
  findActiveFile,
  genCodeEditorId,
  getFileId,
  isCodeFile,
  isImageFile,
  type EditorFile,
} from './code-editor';
import EditorExplorerMenu from './editor-explorer-menu.svelte';
import FileExplorerTreeItems from './file-explorer-tree-items.astro';
import FileExplorerTree from './file-explorer-tree.svelte';

interface Props {
  files: EditorFile[];
  openFile: string;
  nextTemplate?: boolean;
}

const { files, openFile, nextTemplate = false } = Astro.props;

const id = genCodeEditorId(),
  editorId = `mock-code-editor-${id}`,
  defaultFile = findActiveFile(files, openFile);

if (nextTemplate) {
  files.push(
    { path: 'next.config.ts', snippet: `templates/next.config` },
    { path: 'package.json', snippet: `templates/package` },
    { path: 'tailwind.config.cjs', snippet: `templates/tailwind.config` },
  );
}
---

<section
  id={editorId}
  class="w-full border border-border flex flex-col flex-1 max-w-[1280px] mx-auto h-[600px] rounded-md shadow-md 1200:shadow-lg bg-elevate @container overflow-hidden"
  aria-label="Mock Code Editor"
  style="--code-block-max-h: 553px;"
>
  <MockWindowBar />

  <div class="w-full flex-1 flex flex-row relative">
    <EditorExplorerMenu client:visible>
      <aside>
        <FileExplorerTree client:visible>
          <FileExplorerTreeItems {id} items={buildTreeItems(files, defaultFile)} depth={0} />
        </FileExplorerTree>
      </aside>
    </EditorExplorerMenu>

    <SplitCodePane class="flex-1 flex w-full flex-col @4xl:flex-row" client:visible>
      <!-- Editor -->
      <div
        class="h-1/2 @4xl:w-1/2 @4xl:h-full pl-3 pr-1 py-2.5 overflow-hidden"
        style="display: none;"
        data-pane
      >
        {
          files.map((file, i) =>
            isCodeFile(file) ? (
              <CodeSnippet
                id={file.snippet}
                domId={getFileId(id, i)}
                flat
                numbered
                style={file !== defaultFile ? 'display: none;' : null}
              />
            ) : (
              <div
                id={getFileId(id, i)}
                class="w-full h-full flex items-center justify-center"
                style="display: none;"
              >
                <div class="rounded-md overflow-hidden shadow-md max-w-lg aspect-video w-full border border-border">
                  {isImageFile(file) ? (
                    <img
                      class={clsx('w-full object-fill', file.class)}
                      src={file.imgSrc}
                      alt={file.imgAlt}
                      decoding="async"
                    />
                  ) : (
                    <video
                      class="w-full aspect-video"
                      src={file.videoSrc}
                      controls
                      playsinline
                      muted
                    />
                  )}
                </div>
              </div>
            ),
          )
        }
      </div>

      <!-- Preview -->
      <div
        class="flex items-center justify-center p-2 h-1/2 @4xl:w-1/2 @4xl:h-full overflow-hidden"
        style="display: none;"
        data-pane
      >
        <slot name="preview" />
      </div>
    </SplitCodePane>
  </div>
</section>
